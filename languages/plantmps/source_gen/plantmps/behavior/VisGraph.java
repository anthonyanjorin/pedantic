package plantmps.behavior;

/*Generated by MPS */

import jetbrains.mps.project.Project;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class VisGraph {
  private Project project;
  private StringBuilder code = new StringBuilder();
  private String title = "unnamed";
  private boolean isEffectivelyEmpty = false;

  public VisGraph(Project project) {
    code.append("@startuml\n");
    this.project = project;
  }
  public void setCode(String c) {
    code = new StringBuilder(c);
  }
  public String getTitle() {
    return title;
  }
  public void setTitle(String title) {
    this.title = title;
  }
  public void add(String s) {
    code.append(s);
    code.append("\n");
  }
  public boolean isEffectivelyEmpty() {
    return isEffectivelyEmpty;
  }
  public void setEffectivelyEmpty(boolean b) {
    isEffectivelyEmpty = b;
  }
  public String toString() {
    String c = code.toString();
    String res = c + "@enduml\n";
    return res;
  }
  public String createUrl(SNode n) {
    return createUrl(n, "");
  }
  public String createUrl(SNode n, String title) {
    String projectName;
    if (project != null) {
      projectName = project.getName();
    } else {
      projectName = "DEFAULT";
    }
    String modelId = SNodeOperations.getModel(n).getModelId().toString();
    String nodeId = n.getNodeId().toString();
    return "[[plantmps://" + projectName + "/" + modelId + "/" + nodeId + " " + title + "]]";
  }
  public Project getProject() {
    return project;
  }

}
