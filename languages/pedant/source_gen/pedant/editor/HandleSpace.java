package pedant.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.cells.KeyMapImpl;
import jetbrains.mps.openapi.editor.cells.KeyMapAction;
import jetbrains.mps.editor.runtime.cells.KeyMapActionImpl;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SConcept;

public class HandleSpace extends KeyMapImpl {
  public HandleSpace() {
    this.setApplicableToEveryModel(false);
    KeyMapAction action;
    action = new HandleSpace_Action0();
    this.putAction("any", " ", action);
  }
  public static class HandleSpace_Action0 extends KeyMapActionImpl {
    public HandleSpace_Action0() {
      super.setCaretPolicy(KeyMapAction.CARET_AT_LAST_POSITION);
      this.setShownInPopupMenu(false);
    }
    public boolean isMenuAlwaysShown() {
      return false;
    }
    public boolean canExecute(final EditorContext editorContext) {
      EditorCell contextCell = editorContext.getContextCell();
      if ((contextCell == null)) {
        return false;
      }
      SNode contextNode = contextCell.getSNode();
      if (contextNode == null) {
        return false;
      }
      if (!(SNodeOperations.isInstanceOf(contextNode, CONCEPTS.Word$OI))) {
        return false;
      }
      return true;
    }
    public void execute(final EditorContext editorContext) {
      EditorCell contextCell = editorContext.getContextCell();
      this.execute_internal(editorContext, contextCell.getSNode(), this.getSelectedNodes(editorContext));
    }
    private void execute_internal(final EditorContext editorContext, final SNode node, final List<SNode> selectedNodes) {
      SNodeOperations.insertNextSiblingChild(node, SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xe1654c1208bf4d54L, 0x9998af58f6362837L, 0x59c371a1e9b64cc9L, "pedant.structure.Word")));
    }
    public String getKeyStroke() {
      return "  ";
    }
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Word$OI = MetaAdapterFactory.getConcept(0xe1654c1208bf4d54L, 0x9998af58f6362837L, 0x59c371a1e9b64cc9L, "pedant.structure.Word");
  }
}
