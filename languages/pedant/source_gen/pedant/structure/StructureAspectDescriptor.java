package pedant.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptorImpl;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAlias = createDescriptorForAlias();
  /*package*/ final ConceptDescriptor myConceptAliasReference = createDescriptorForAliasReference();
  /*package*/ final ConceptDescriptor myConceptDefinition = createDescriptorForDefinition();
  /*package*/ final ConceptDescriptor myConceptPedantry = createDescriptorForPedantry();
  /*package*/ final ConceptDescriptor myConceptPedantryReference = createDescriptorForPedantryReference();
  /*package*/ final ConceptDescriptor myConceptPunctuation = createDescriptorForPunctuation();
  /*package*/ final ConceptDescriptor myConceptWord = createDescriptorForWord();
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypecontent = new ConstrainedStringDatatypeDescriptorImpl(0xe1654c1208bf4d54L, 0x9998af58f6362837L, 0x59c371a1e9c2bdb6L, "content", "r:27dbd124-2bea-4882-ab68-7e12db4207fb(pedant.structure)/6468138430059691446", "\\S+");
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAlias, myConceptAliasReference, myConceptDefinition, myConceptPedantry, myConceptPedantryReference, myConceptPunctuation, myConceptWord);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Alias:
        return myConceptAlias;
      case LanguageConceptSwitch.AliasReference:
        return myConceptAliasReference;
      case LanguageConceptSwitch.Definition:
        return myConceptDefinition;
      case LanguageConceptSwitch.Pedantry:
        return myConceptPedantry;
      case LanguageConceptSwitch.PedantryReference:
        return myConceptPedantryReference;
      case LanguageConceptSwitch.Punctuation:
        return myConceptPunctuation;
      case LanguageConceptSwitch.Word:
        return myConceptWord;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myCSDatatypecontent);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAlias() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pedant", "Alias", 0xe1654c1208bf4d54L, 0x9998af58f6362837L, 0x59c371a1e9b64cc1L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:27dbd124-2bea-4882-ab68-7e12db4207fb(pedant.structure)/6468138430058876097");
    b.version(3);
    b.alias("alias");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAliasReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pedant", "AliasReference", 0xe1654c1208bf4d54L, 0x9998af58f6362837L, 0x59c371a1e9b64ccfL);
    b.class_(false, false, false);
    // extends: pedant.structure.Word
    b.super_(0xe1654c1208bf4d54L, 0x9998af58f6362837L, 0x59c371a1e9b64cc9L);
    b.origin("r:27dbd124-2bea-4882-ab68-7e12db4207fb(pedant.structure)/6468138430058876111");
    b.version(3);
    b.associate("referencedAlias", 0x59c371a1e9b64cd0L).target(0xe1654c1208bf4d54L, 0x9998af58f6362837L, 0x59c371a1e9b64cc1L).optional(false).origin("6468138430058876112").done();
    b.alias("definition (alias)");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pedant", "Definition", 0xe1654c1208bf4d54L, 0x9998af58f6362837L, 0x59c371a1e9b635c1L);
    b.class_(false, false, false);
    b.parent(0xe8c53fb6e3d145b8L, 0x804f056de67b4715L, 0x7b0220c2de5fc909L);
    b.origin("r:27dbd124-2bea-4882-ab68-7e12db4207fb(pedant.structure)/6468138430058870209");
    b.version(3);
    b.aggregate("aliases", 0x59c371a1e9b64cc4L).target(0xe1654c1208bf4d54L, 0x9998af58f6362837L, 0x59c371a1e9b64cc1L).optional(false).ordered(true).multiple(true).origin("6468138430058876100").done();
    b.aggregate("description", 0x59c371a1e9b64cc6L).target(0xe1654c1208bf4d54L, 0x9998af58f6362837L, 0x59c371a1e9b64cc9L).optional(true).ordered(true).multiple(true).origin("6468138430058876102").done();
    b.alias("definition");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPedantry() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pedant", "Pedantry", 0xe1654c1208bf4d54L, 0x9998af58f6362837L, 0x59c371a1e9b64cafL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:27dbd124-2bea-4882-ab68-7e12db4207fb(pedant.structure)/6468138430058876079");
    b.version(3);
    b.aggregate("definitions", 0x59c371a1e9b96d8fL).target(0xe1654c1208bf4d54L, 0x9998af58f6362837L, 0x59c371a1e9b635c1L).optional(true).ordered(true).multiple(true).origin("6468138430059081103").done();
    b.alias("pedantry");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPedantryReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pedant", "PedantryReference", 0xe1654c1208bf4d54L, 0x9998af58f6362837L, 0x59c371a1e9b96d91L);
    b.class_(false, false, false);
    // extends: pedant.structure.Word
    b.super_(0xe1654c1208bf4d54L, 0x9998af58f6362837L, 0x59c371a1e9b64cc9L);
    b.origin("r:27dbd124-2bea-4882-ab68-7e12db4207fb(pedant.structure)/6468138430059081105");
    b.version(3);
    b.associate("pedantry", 0x59c371a1e9b96d92L).target(0xe1654c1208bf4d54L, 0x9998af58f6362837L, 0x59c371a1e9b64cafL).optional(false).origin("6468138430059081106").done();
    b.alias("pendantry");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPunctuation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pedant", "Punctuation", 0xe1654c1208bf4d54L, 0x9998af58f6362837L, 0x59c371a1e9c4bdd6L);
    b.class_(false, false, false);
    // extends: pedant.structure.Word
    b.super_(0xe1654c1208bf4d54L, 0x9998af58f6362837L, 0x59c371a1e9b64cc9L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:27dbd124-2bea-4882-ab68-7e12db4207fb(pedant.structure)/6468138430059822550");
    b.version(3);
    b.alias("punctuation");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWord() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pedant", "Word", 0xe1654c1208bf4d54L, 0x9998af58f6362837L, 0x59c371a1e9b64cc9L);
    b.class_(false, false, false);
    b.origin("r:27dbd124-2bea-4882-ab68-7e12db4207fb(pedant.structure)/6468138430058876105");
    b.version(3);
    b.property("contents", 0x59c371a1e9c2bd7bL).type(MetaIdFactory.dataTypeId(0xe1654c1208bf4d54L, 0x9998af58f6362837L, 0x59c371a1e9c2bdb6L)).origin("6468138430059691387").done();
    b.alias("normal text");
    return b.create();
  }
}
